' STF creates Quotes without first creating a consultation

@startuml

    title STF creates Quotes without first creating a consultation
    
    actor "STF" as STF
    participant "UI" as UI
    participant "Backend" as Backend
    participant "Database" as Database

    note over STF, UI #GreenYellow
        Data in every page is saved to database
        so that the user doesn't have to type everything again
        in case his connection got disconnected.

        UI should show breadcrumbs.
    end note

    group Job Page 
        STF  -> UI: Click //Start a Job// button
    end group
    
    group Start a Quote Page
        STF -> UI: Click //Start a Quote// button
        STF -> UI: Enter details about the Client

        note over STF, UI #White
            * Client Details
            * Additional Client Details
        end note

        STF -> UI: Click //Next// button
        UI -> Backend: Save data from this page
        Backend -> Database: Save data from this page
    end group

    group Agent / Referrer Details Page
        STF -> UI: Enter details about the Agent / Referrer
        STF -> UI: Click //Next// button
        UI -> Backend: Save data from this page
        Backend -> Database: Save data from this page
    end group

    group Install & Access Page
        STF -> UI: Enter the following details
        note over STF, UI #White
            * Access Via
            * Occupancy 
            * Install Date
            * Install Access Notes
        end note

        opt STF wants to add Lift information
            STF -> UI: Click //Add Lift Info// button 
            UI -> UI: Expand section for STF to add lift Info
            STF -> UI: Enter Lift details.
        end

        STF -> UI: Click //Next// button
        UI -> Backend: Save data from this page
        Backend -> Database: Save data from this page
    end group

    group Styling Proposal Page
        loop For ALL Rooms
            STF -> UI: Add a Room
            UI -> UI: //Expands to show the options to style a room//
            STF -> UI: Click Button to select the desired //Look and Feel//
            UI -> UI: //UI Opens the Brief Page//

            group Brief Page
                STF -> UI: Select **one or multiple** items for the desired look and feel
                STF -> UI: Writes puts data regarding the following\n\t- Clients Love\n\t- Clients Do **NOT** love\n\t- Expected Demographic\n\t- Alterations
                STF -> UI: Click //Next// button
                UI -> Backend: Save data from this page
                Backend -> Database: Save data from this page
            end group
        end loop
        opt For all Optional Rooms
            loop For all Optional Rooms
                ref over STF, Database
                    Algorithm follows the loop in //For **ALL** Rooms// Section 
                end ref
            end loop
        end
    end group

    group Services
        note over STF, Database
            See Novari Operations Manual for the
            list of Services and Bespoke Services
            that clients can choose from
        end note

        loop Each of the Services
            STF -> UI: Add information as to the type of service required
            UI -> Backend: Save information
            Backend -> Database: Save information            
        end

        loop Each of the //Bespoke// Services
            STF -> UI: Add information about each Bespoke Service required
            UI -> Backend: Save information
            Backend -> Database: Save information            
        end note
    end group

    group Summary Page
        Database -> Backend: Perform calculations
        Backend -> UI: Display a Summary of costs

        note over UI, Backend
            See Confluence page for detailed information
            related to computations
        end note

        alt STF clicked continue editing
            ref over STF, UI
                Go back to //Styling Proposal// Page
            end ref
        else STF clicked Next
            UI -> Backend: Save all data
            Backend -> Database: Save all data
            group Done Page
                note over STF, UI #White
                    Show the //Done// Page
                end note
            end group
        end
    end group

    group Done Page
        STF -> UI: Click //Copy Quote Link// button
        STF -> UI: Click //Send Email to Client// button
        UI -> UI: Show a sample Email Template
        STF -> UI: Enter his/her client's email address
        STF -> UI: Click //Send//
        UI -> SMTP: Email is sent
    end group
    
@enduml